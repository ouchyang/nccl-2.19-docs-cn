# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the NCCL(2.19) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NCCL(2.19)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 14:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.0.11\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/usage/p2p.rst:5 5316240423c640be97ea5b1e5cd52d5e
msgid "Point-to-point communication"
msgstr "点对点通信"

#: ../../source/usage/p2p.rst:7 5dccf26db3b54d09879abf900e7a2425
msgid ""
"(Since NCCL 2.7) Point-to-point communication can be used to express any communication pattern between ranks. Any "
"point-to-point communication needs two NCCL calls : a call to :c:func:`ncclSend` on one rank and a corresponding "
":c:func:`ncclRecv` on the other rank, with the same count and data type."
msgstr ""
"（自 NCCL 2.7 起）点对点通信可用于表达进程(rank)之间的任意通信模式。任何点对点通信需要两个 NCCL 调用：一个进程(rank)上调用 :c:func:`ncclSend`，另一个进程(rank)上调用相应的 "
":c:func:`ncclRecv`，且需保持相同的计数和数据类型。"

#: ../../source/usage/p2p.rst:13 58bdf05d38bc44a4a041b1394324a429
msgid ""
"Multiple calls to :c:func:`ncclSend` and :c:func:`ncclRecv` targeting different peers can be fused together with "
":c:func:`ncclGroupStart` and :c:func:`ncclGroupEnd` to form more complex communication patterns such as one-to-all "
"(scatter), all-to-one (gather), all-to-all or communication with neighbors in a N-dimensional space."
msgstr ""
"针对不同对等体的多次:c:func:`ncclSend`和:c:func:`ncclRecv`调用可通过:c:func:`ncclGroupStart`与:c:func:`ncclGroupEnd`"
"进行融合，以构建更复杂的通信模式，例如一对多（散播）、多对一（收集）、全对全或N维空间中的邻接通信。"

#: ../../source/usage/p2p.rst:18 bb91d41ca66145fabd80c9af31ae9a37
msgid ""
"Point-to-point calls within a group will be blocking until that group of calls completes, but calls within a group can "
"be seen as progressing independently, hence should never block each other. It is therefore important to merge calls "
"that need to progress concurrently to avoid deadlocks."
msgstr "组内的点对点调用将保持阻塞状态，直至该组调用全部完成，但组内调用可视为独立推进，因此绝不应相互阻塞。必须将需要并发推进的调用进行合并，以避免死锁。"

#: ../../source/usage/p2p.rst:23 ef311dc7cd5d4c36a08e3300df76a270
msgid ""
"Below are a few examples of classic point-to-point communication patterns used by parallel applications. NCCL semantics "
"allow for all variants with different sizes, datatypes, and buffers, per rank."
msgstr "以下是并行应用程序中使用的几种经典点对点通信模式示例。NCCL语义支持每个进程(rank)（rank）使用不同大小、数据类型和缓冲区的所有变体。"

#: ../../source/usage/p2p.rst:28 880f792f839f46c1bc972ea17aa45485
msgid "Sendrecv"
msgstr "Sendrecv → 发送接收"

#: ../../source/usage/p2p.rst:30 6e368d8d1ffb45928b603bb3b05cced4
msgid ""
"In MPI terms, a sendrecv operation is when two ranks exchange data, both sending and receiving at the same time. This "
"can be done by merging both ncclSend and ncclRecv calls into one :"
msgstr "在MPI术语中，发送接收操作指两个进程(rank)同时进行数据交换，既发送又接收。这可以通过将ncclSend和ncclRecv调用合并为一个操作来实现："

#: ../../source/usage/p2p.rst:41 2e2e0bf2ead646f589acb3f9d89bb198
msgid "One-to-all (scatter)"
msgstr "一对多（散播）"

#: ../../source/usage/p2p.rst:43 b511c0e32e0348029997930d14c30c85
msgid "A one-to-all operation from a ``root`` rank can be expressed by merging all send and receive operations in a group :"
msgstr "从根进程(rank)执行的一对多操作可通过合并组内所有发送与接收操作来实现："

#: ../../source/usage/p2p.rst:57 4a936d922014420fa98ed6fd5e0f6a2c
msgid "All-to-one (gather)"
msgstr "全收集（gather）"

#: ../../source/usage/p2p.rst:59 66e12c2a591a457fb0fc5591de6ec469
msgid "Similarly, an all-to-one operations to a ``root`` rank would be implemented this way :"
msgstr "类似地，针对某个根进程(rank)（root rank）的一对多操作将按以下方式实现："

#: ../../source/usage/p2p.rst:72 990967a7e63940b7836e361ea445018b
msgid "All-to-all"
msgstr "全交换"

#: ../../source/usage/p2p.rst:74 796fb38347f04973a67992d8a399a656
msgid "An all-to-all operation would be a merged loop of send/recv operations to/from all peers :"
msgstr "全对全操作将实现为向所有对等体发送/从所有对等体接收的合并循环："

#: ../../source/usage/p2p.rst:87 e87e071c350b4aaaa1afac536b6aab39
msgid "Neighbor exchange"
msgstr "邻居交换"

#: ../../source/usage/p2p.rst:89 37ef20e66a3f4e2cb4a7972c1cec5179
msgid "Finally, exchanging data with neighbors in an N-dimensions space could be done with :"
msgstr "最后，在N维空间中与相邻节点交换数据可通过以下方式实现："
