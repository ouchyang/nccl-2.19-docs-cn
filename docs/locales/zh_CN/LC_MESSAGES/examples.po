# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the NCCL(2.19) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NCCL(2.19)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 14:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.0.11\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/examples.rst:3 2c13fe28014b498c9eebd184c80e05e6
msgid "Examples"
msgstr "示例"

#: ../../source/examples.rst:5 2e71da0af87948f4afd30b1e9844248c
msgid ""
"The examples in this section provide an overall view of how to use NCCL in various environments, combining one or "
"multiple techniques:"
msgstr "本节示例综合展示了如何在不同环境中运用NCCL，融合单项或多项技术方案："

#: ../../source/examples.rst:8 820962741d5946a09457217bf97f8a6a
msgid "using multiple GPUs per thread/process"
msgstr "每个线程/进程使用多个GPU"

#: ../../source/examples.rst:9 c6957b8c5d1d415dbd707905bc191ffd
msgid "using multiple threads"
msgstr "使用多线程"

#: ../../source/examples.rst:10 356f16b30bf84766b01773cf339df6e5
msgid ""
"using multiple processes - the examples with multiple processes use MPI as parallel runtime environment, but any "
"multi-process system should be able to work similarly."
msgstr "使用多进程 - 采用多进程的示例使用MPI作为并行运行时环境，但任何多进程系统都应能以类似方式工作。"

#: ../../source/examples.rst:13 6d8a4b598d1f4ea09d1eeeb9232d8a58
msgid ""
"Ensure that you always check the return codes from the NCCL functions.  For clarity, the following examples do not "
"contain error checking."
msgstr "请务必始终检查NCCL函数的返回码。为清晰起见，以下示例未包含错误检查。"

#: ../../source/examples.rst:17 7ad1bbdb7ddd490f8285356ea6b677fe
msgid "Communicator Creation and Destruction Examples"
msgstr "通信器创建与销毁示例"

#: ../../source/examples.rst:19 ed38c3d8daf6430b8b8a64f6d8997885
msgid "The following examples demonstrate common use cases for NCCL initialization."
msgstr "以下示例展示了NCCL初始化的常见使用场景。"

#: ../../source/examples.rst:23 36e2b6a8f6a748fb856f2bdff0999e07
msgid "Example 1: Single Process, Single Thread, Multiple Devices"
msgstr "示例1：单进程、单线程、多设备"

#: ../../source/examples.rst:26 3aa742663872409c9d9eeda1100f7f26
msgid ""
"In the specific case of a single process, ncclCommInitAll can be used. Here is an example creating a communicator for 4 "
"devices, therefore, there are 4 communicator objects:"
msgstr "在单进程特定场景中，可使用 ncclCommInitAll 函数。以下示例创建包含4个设备的通信器，对应生成4个通信器对象："

#: ../../source/examples.rst:34 de594e87cd464840a6b02993cbc90458
msgid ""
"Next, you can call NCCL collective operations using a single thread, and group calls, or multiple threads, each "
"provided with a comm object."
msgstr "接下来，您可以使用单个线程调用NCCL集合通信操作，进行分组调用，或者使用多个线程，每个线程都提供一个通信对象。"

#: ../../source/examples.rst:37 61ab8b7c4ece44fd81fafdb273e68441
msgid "At the end of the program, all of the communicator objects are destroyed:"
msgstr "程序结束时，所有通信器对象均被销毁："

#: ../../source/examples.rst:44 8fc33336c7ec438b9808571ab68d4e86
msgid "The following code depicts a complete working example with a single process that manages multiple devices:"
msgstr "以下代码展示了一个完整可运行的示例，其中单个进程管理多个设备："

#: ../../source/examples.rst:137 a720f48d650f4224ad980fdecd2fcae1
msgid "Example 2: One Device per Process or Thread"
msgstr "示例二：每个进程或线程对应一个设备"

#: ../../source/examples.rst:139 fac2cbd2c8be4e28a835b995bfb39b2c
msgid ""
"When a process or host thread is responsible for at most one GPU, ncclCommInitRank can be used as a collective call to "
"create a communicator. Each thread or process will get its own object."
msgstr "当单个进程或主机线程最多负责一个GPU时，可使用ncclCommInitRank作为集合通信调用来创建通信器。每个线程或进程将获得其独立的通信器对象。"

#: ../../source/examples.rst:142 edeecac735184a66ba21db675a9912b2
msgid "The following code is an example of a communicator creation in the context of MPI, using one device per MPI rank."
msgstr "以下代码展示了在MPI环境中创建通信器的示例，其中每个MPI进程(rank)对应一个设备。"

#: ../../source/examples.rst:145 ../../source/examples.rst:330
#: 3797c34164e742f087ea29b9c262a23c c55a888c7f4f49178619bbb056a19411
msgid "First, we retrieve MPI information about processes:"
msgstr "首先，我们获取有关进程的MPI信息："

#: ../../source/examples.rst:153 ../../source/examples.rst:338
#: 1b794fccd2f54c5691b164c488794b23 5b1a3cd46ff448bc875ea3c11bbf3798
msgid "Next, a single rank will create a unique ID and send it to all other ranks to make sure everyone has it:"
msgstr "接下来，单个进程(rank)将生成唯一标识符并将其发送至所有其他进程(rank)，以确保所有参与者均持有该标识符："

#: ../../source/examples.rst:161 c8f7c5a4565f42cb894b4886efe5b108
msgid "Finally, we create the communicator:"
msgstr "最后，我们创建通信器："

#: ../../source/examples.rst:168 0b357b9a18bd4c1d9fef54db61f1d90d
msgid "We can now call the NCCL collective operations using the communicator."
msgstr "现在我们可以使用通信器调用NCCL集合通信操作。"

#: ../../source/examples.rst:174 5981b505ed404d3babf3aa7aaba801df
msgid "Finally, we destroy the communicator object:"
msgstr "最后，我们销毁通信器对象："

#: ../../source/examples.rst:181 9f9ec5c9507742f08f07e8d8636e002a
msgid "The following code depicts a complete working example with multiple MPI processes and one device per process:"
msgstr "以下代码展示了一个完整的多MPI进程示例，每个进程对应一个设备："

#: ../../source/examples.rst:322 29a1cccc91e1453886afb2b905b2d2cb
msgid "Example 3: Multiple Devices per Thread"
msgstr "示例3：单线程多设备"

#: ../../source/examples.rst:324 b6dc1b49a96344a09f4b86084f6b49d2
msgid ""
"You can combine both multiple process or threads and multiple device per process or thread. In this case, we need to "
"use group semantics."
msgstr "可以同时结合多进程或多线程与每个进程/线程的多设备。在这种情况下，需要使用组语义。"

#: ../../source/examples.rst:327 095552d0b2a24491b26f54e1ecabd839
msgid "The following example combines MPI and multiple devices per process (=MPI rank)."
msgstr "以下示例结合了MPI与每个进程（=MPI进程(rank)）中的多个设备。"

#: ../../source/examples.rst:346 e9fa2be55ba94565bec1b8786b13e785
msgid "Then, we create our ngpus communicator objects, which are part of a larger group of ngpus*nRanks:"
msgstr "随后，我们创建包含 ngpus*nRanks 更大组内的 ngpus 个通信器对象。"

#: ../../source/examples.rst:358 bff5e6cec37e433da810201d872943ec
msgid ""
"Next, we call NCCL collective operations using a single thread, and group calls, or multiple threads, each provided "
"with a comm object."
msgstr "接下来，我们使用单线程调用NCCL集合通信操作，并通过分组调用或多个线程（每个线程配备一个通信对象）来执行。"

#: ../../source/examples.rst:360 07e44b34de264ec3a50acbbf7111420c
msgid "At the end of the program, we destroy all communicators objects:"
msgstr "程序结束时，我们销毁所有通信器对象："

#: ../../source/examples.rst:367 a4fc414e3b584fcfa47a769292442f30
msgid "The following code depicts a complete working example with multiple MPI processes and multiple devices per process:"
msgstr "以下代码展示了一个包含多MPI进程且每个进程含多设备的完整可运行示例："

#: ../../source/examples.rst:532 74d90820b0b94b4e92b80f91c8dc9ba2
msgid "Communication Examples"
msgstr "通信示例"

#: ../../source/examples.rst:534 defeb0a6175742d0884ba08c4b12da7d
msgid "The following examples demonstrate common patterns for executing NCCL collectives."
msgstr "以下示例展示了执行NCCL集合通信操作的常见模式。"

#: ../../source/examples.rst:538 1b7a7e88ae254319a78fd0b3c45236e1
msgid "Example 1: One Device per Process or Thread"
msgstr "示例一：每个进程或线程对应一个设备"

#: ../../source/examples.rst:541 b3d51458fb7043ed8b4b71fa2c690616
msgid ""
"If you have a thread or process per device, then each thread calls the collective operation for its device,for example, "
"AllReduce:"
msgstr "若每个设备对应一个线程或进程，则每个线程将为其设备调用集合通信操作，例如：AllReduce："

#: ../../source/examples.rst:548 fe803cc1e74344d0a335b6760a5cdf5a
msgid ""
"After the call, the operation has been enqueued to the stream.  Therefore, you can call cudaStreamSynchronize if you "
"want to wait for the operation to be complete:"
msgstr "调用完成后，该操作已被加入流中。因此，若需等待操作完成，可调用cudaStreamSynchronize："

#: ../../source/examples.rst:554 626882a0de654c519f04b02b071d03b9
msgid ""
"For a complete working example with MPI and single device per MPI process, see \"Example 2: One Device per Process or "
"Thread\"."
msgstr "有关使用MPI且每个MPI进程对应单个设备的完整可运行示例，请参阅“示例2：每个进程或线程对应一个设备”。"

#: ../../source/examples.rst:557 62299037d29246028cf26c3ca7d5692f
msgid "Example 2: Multiple Devices per Thread"
msgstr "示例二：单线程多设备"

#: ../../source/examples.rst:559 63c6f1ac2eb74332badf1fb1fbc51dfe
msgid ""
"When a single thread manages multiple devices, you need to use group semantics to launch the operation on multiple "
"devices at once:"
msgstr "当单个线程管理多个设备时，需要使用组语义（group semantics）同时在多个设备上启动操作："

#: ../../source/examples.rst:568 5dc6ade2bd534dab90daea7300ab340e
msgid ""
"After ncclGroupEnd, all of the operations have been enqueued to the stream.  Therefore, you can now call "
"cudaStreamSynchronize if you want to wait for the operation to be complete:"
msgstr "调用ncclGroupEnd后，所有操作均已加入流中。因此，如需等待操作完成，此时可调用cudaStreamSynchronize："

#: ../../source/examples.rst:576 bffb12a6d53f4a7bbb62e3c217252219
msgid ""
"For a complete working example with MPI and multiple devices per MPI process, see :ref:`Example 3: Multiple Devices per "
"Thread<Ex3>`."
msgstr "有关使用MPI且每个MPI进程包含多个设备的完整可运行示例，请参阅：:ref:`示例3：每个线程多个设备<Ex3>`。"
