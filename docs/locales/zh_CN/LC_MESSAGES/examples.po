# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the NCCL(2.19) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NCCL(2.19)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-27 11:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.0.11\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/examples.rst:3 9a68e6bc03c54f75933036622b23fe4e
msgid "Examples"
msgstr "示例"

#: ../../source/examples.rst:5 2f02cc8d32df47cdba1f67f19201ad35
msgid ""
"The examples in this section provide an overall view of how to use NCCL in various environments, combining one or "
"multiple techniques:"
msgstr "本节中的示例提供了如何在不同环境中使用NCCL的整体视图，结合了一种或多种技术："

#: ../../source/examples.rst:8 f72d7ea360f04379af83734f6d86c59f
msgid "using multiple GPUs per thread/process"
msgstr "使用多个GPU每个线程/进程"

#: ../../source/examples.rst:9 3b5b4bb5842e45948e1545cf34c589a9
msgid "using multiple threads"
msgstr "使用多个线程"

#: ../../source/examples.rst:10 4b632b1f25bd4709a1ed0f382970ea87
msgid ""
"using multiple processes - the examples with multiple processes use MPI as parallel runtime environment, but any "
"multi-process system should be able to work similarly."
msgstr "使用多个进程 - 使用多个进程的示例使用MPI作为并行运行时环境，但任何多进程系统都应该能够类似地工作。"

#: ../../source/examples.rst:13 5693f908eac5481db2ad465cf725dafe
msgid ""
"Ensure that you always check the return codes from the NCCL functions.  For clarity, the following examples do not "
"contain error checking."
msgstr "请务必始终检查来自 NCCL 函数的返回代码。为了清晰起见，以下示例不包含错误检查。"

#: ../../source/examples.rst:17 e1d2d9da7bbb45369bbc5103b4cf34e0
msgid "Communicator Creation and Destruction Examples"
msgstr "通信器创建和销毁示例"

#: ../../source/examples.rst:19 a45d3fff87224afa84f8fdcc92743088
msgid "The following examples demonstrate common use cases for NCCL initialization."
msgstr "以下示例展示了NCCL初始化的常见用例。"

#: ../../source/examples.rst:23 2e7e85d4913a4e989043b876fda8aee4
msgid "Example 1: Single Process, Single Thread, Multiple Devices"
msgstr "示例 1：单进程，单线程，多设备"

#: ../../source/examples.rst:26 37f34b63abe64bb6b414a73e5f77b216
msgid ""
"In the specific case of a single process, ncclCommInitAll can be used. Here is an example creating a communicator for 4 "
"devices, therefore, there are 4 communicator objects:"
msgstr "在单个进程的特定情况下，可以使用ncclCommInitAll。以下是一个创建包含4个设备的通信器的示例，因此有4个通信器对象："

#: ../../source/examples.rst:34 c55654baf75845ce8a673beab9869ae3
msgid ""
"Next, you can call NCCL collective operations using a single thread, and group calls, or multiple threads, each "
"provided with a comm object."
msgstr "接下来，您可以使用单个线程调用 NCCL 集体操作，并进行组调用，或者使用多个线程，每个线程都提供一个 comm 对象。"

#: ../../source/examples.rst:37 68b654e666984e74bbdf01588578e162
msgid "At the end of the program, all of the communicator objects are destroyed:"
msgstr "在程序结束时，所有的通信对象都会被销毁："

#: ../../source/examples.rst:44 a33b3856a7074f45b6b44f88887bd4fb
msgid "The following code depicts a complete working example with a single process that manages multiple devices:"
msgstr "以下代码展示了一个完整的工作示例，其中一个进程管理多个设备："

#: ../../source/examples.rst:137 fbabc71262c64a5f9489498a82677e8e
msgid "Example 2: One Device per Process or Thread"
msgstr "示例 2：每个进程或线程一个设备"

#: ../../source/examples.rst:139 f1b8af22adde47a984f19856abf12d43
msgid ""
"When a process or host thread is responsible for at most one GPU, ncclCommInitRank can be used as a collective call to "
"create a communicator. Each thread or process will get its own object."
msgstr "当一个进程或主机线程最多负责一个GPU时，ncclCommInitRank可以用作一个集体调用来创建一个通信器。每个线程或进程将获得自己的对象。"

#: ../../source/examples.rst:142 3ccfa9fa9df84cbd89370956f9857c9e
msgid "The following code is an example of a communicator creation in the context of MPI, using one device per MPI rank."
msgstr "以下代码是在MPI上下文中创建通信器的示例，每个MPI排名使用一个设备。"

#: ../../source/examples.rst:145 ../../source/examples.rst:330
#: 4d8109695e2e446688c55850aa8a093c 98c7346614c04165a0f606280466059f
msgid "First, we retrieve MPI information about processes:"
msgstr "首先，我们检索有关进程的 MPI 信息："

#: ../../source/examples.rst:153 ../../source/examples.rst:338
#: 00bcea62ba87457ba6518f8562e8dec1 bd00ec6668a44146846004151c0d2ac3
msgid "Next, a single rank will create a unique ID and send it to all other ranks to make sure everyone has it:"
msgstr "下一步，一个单一的等级将创建一个唯一的ID，并将其发送给所有其他等级，以确保每个人都拥有它："

#: ../../source/examples.rst:161 96b70cf2f9674ef18e795704b4fdf355
msgid "Finally, we create the communicator:"
msgstr "最后，我们创建通信器："

#: ../../source/examples.rst:168 f5f2f3353eee4614a667dcb1ed7f46fd
msgid "We can now call the NCCL collective operations using the communicator."
msgstr "我们现在可以使用通信器调用NCCL集合操作。"

#: ../../source/examples.rst:174 932c3f5b13aa4bc49489b6fc7321be76
msgid "Finally, we destroy the communicator object:"
msgstr "最后，我们销毁通信对象："

#: ../../source/examples.rst:181 c6ea1f3e4c574089b2cc57525f3fc2bd
msgid "The following code depicts a complete working example with multiple MPI processes and one device per process:"
msgstr "以下代码展示了一个完整的工作示例，其中包含多个MPI进程和每个进程一个设备："

#: ../../source/examples.rst:322 7aebf1ee31ed4653b227618b1ada0035
msgid "Example 3: Multiple Devices per Thread"
msgstr "示例 3：每个线程多个设备"

#: ../../source/examples.rst:324 35ec744a0f744ac39fd9b3f1cce77175
msgid ""
"You can combine both multiple process or threads and multiple device per process or thread. In this case, we need to "
"use group semantics."
msgstr "您可以将多个进程或线程与每个进程或线程的多个设备结合起来。在这种情况下，我们需要使用组语义。"

#: ../../source/examples.rst:327 7e0cec7de60b459fa491d8d5d97635f1
msgid "The following example combines MPI and multiple devices per process (=MPI rank)."
msgstr "以下示例结合了MPI和每个进程（=MPI rank）上的多个设备。"

#: ../../source/examples.rst:346 d9c30e78929142d385f2e0cb4b011244
msgid "Then, we create our ngpus communicator objects, which are part of a larger group of ngpus*nRanks:"
msgstr "然后，我们创建我们的 ngpus 通信对象，这些对象是 ngpus*nRanks 的一个更大组成部分："

#: ../../source/examples.rst:358 ba035168df184395911584647599eeaf
msgid ""
"Next, we call NCCL collective operations using a single thread, and group calls, or multiple threads, each provided "
"with a comm object."
msgstr "接下来，我们使用单个线程调用 NCCL 集合操作，并进行组调用，或者使用多个线程，每个线程都提供一个 comm 对象。"

#: ../../source/examples.rst:360 d6bd3a59e99d4870b9eb33ac07476957
msgid "At the end of the program, we destroy all communicators objects:"
msgstr "在程序结束时，我们销毁所有通信器对象："

#: ../../source/examples.rst:367 c4ed4a9d24a440b3965d1e726e9d6985
msgid "The following code depicts a complete working example with multiple MPI processes and multiple devices per process:"
msgstr "以下代码展示了一个完整的工作示例，其中包括多个MPI进程和每个进程多个设备："

#: ../../source/examples.rst:532 cab92098ee164275b8398a9248874094
msgid "Communication Examples"
msgstr "通信示例"

#: ../../source/examples.rst:534 2975ec43cdb344e9ba80d44b58ed59d9
msgid "The following examples demonstrate common patterns for executing NCCL collectives."
msgstr "以下示例展示了执行NCCL集合操作的常见模式。"

#: ../../source/examples.rst:538 40a28c69d989406bbbbf118d37d32a90
msgid "Example 1: One Device per Process or Thread"
msgstr "示例 1: 每个进程或线程一个设备"

#: ../../source/examples.rst:541 46c2a28a18ea4d5b978b847d1fb05ebd
msgid ""
"If you have a thread or process per device, then each thread calls the collective operation for its device,for example, "
"AllReduce:"
msgstr "如果您针对每个设备有一个线程或进程，那么每个线程为其设备调用集合操作，例如，AllReduce:"

#: ../../source/examples.rst:548 7bc65803a5324514b5e46c388b59f492
msgid ""
"After the call, the operation has been enqueued to the stream.  Therefore, you can call cudaStreamSynchronize if you "
"want to wait for the operation to be complete:"
msgstr "通话结束后，操作已被排入流队列。因此，如果您希望等待操作完成，可以调用cudaStreamSynchronize："

#: ../../source/examples.rst:554 f6534f54739f41e4b43d77336fa38260
msgid ""
"For a complete working example with MPI and single device per MPI process, see \"Example 2: One Device per Process or "
"Thread\"."
msgstr "有关MPI和每个MPI进程一个设备的完整工作示例，请参阅“示例2：每个进程或线程一个设备”。"

#: ../../source/examples.rst:557 ffe6800953c94cf6b2cc8b472260ada0
msgid "Example 2: Multiple Devices per Thread"
msgstr "示例 2：每个线程多个设备"

#: ../../source/examples.rst:559 0f831f60d51149359a7a81e192ae0852
msgid ""
"When a single thread manages multiple devices, you need to use group semantics to launch the operation on multiple "
"devices at once:"
msgstr "当单个线程管理多个设备时，您需要使用组语义一次性在多个设备上启动操作："

#: ../../source/examples.rst:568 457c104364d44b508d8f91a8c9b3ddb1
msgid ""
"After ncclGroupEnd, all of the operations have been enqueued to the stream.  Therefore, you can now call "
"cudaStreamSynchronize if you want to wait for the operation to be complete:"
msgstr "在 `ncclGroupEnd` 之后，所有操作都已经被加入到流中。因此，如果你想要等待操作完成，现在可以调用 `cudaStreamSynchronize`："

#: ../../source/examples.rst:576 fa863f5fe3184fa2abbf9760fd73b8bb
msgid ""
"For a complete working example with MPI and multiple devices per MPI process, see :ref:`Example 3: Multiple Devices per "
"Thread<Ex3>`."
msgstr "有关MPI和每个MPI进程多个设备的完整工作示例，请参阅:ref:`示例3: 每个线程多个设备<Ex3>`。"
