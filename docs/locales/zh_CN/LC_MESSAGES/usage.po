# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the NCCL(2.19) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NCCL(2.19)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-01 14:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.0.11\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/usage.rst:3 42914daa492f431190d1e4b3d5804471
msgid "Using NCCL"
msgstr "使用NCCL"

#: ../../source/usage.rst:5 7700c42c4f0e4c60a1ba1bba506e602c
msgid "Using NCCL is similar to using any other library in your code:"
msgstr "使用NCCL与在代码中使用其他库类似："

#: ../../source/usage.rst:7 6775af9f7bb64bf2986ca6366dc44d24
msgid "Install the NCCL library on your system"
msgstr "安装NCCL库至您的系统"

#: ../../source/usage.rst:9 fa12c26b3fa547ffb4538209087dffc5
msgid "Modify your application to link to that library"
msgstr "请修改您的应用程序以链接到该库。"

#: ../../source/usage.rst:11 619daa9e1af244c589cd7410f7869e1f
msgid "Include the header file nccl.h in your application"
msgstr "在应用程序中包含头文件 nccl.h"

#: ../../source/usage.rst:13 3395c522ef6e4cd2aedc2d691fa023fd
msgid "Create a communicator (see :ref:`communicator-label`)"
msgstr "创建通信器（参见：ref:`communicator-label`）"

#: ../../source/usage.rst:15 2cbd2f333a084ab49a7d424c733ddfc7
msgid ""
"Use NCCL collective communication primitives to perform data communication. You can familiarize yourself with the "
":ref:`api-label` documentation to maximize your usage performance."
msgstr "使用NCCL集合通信原语执行数据通信。您可参考 :ref:`api-label` 文档以最大化使用性能。"

#: ../../source/usage.rst:17 bc67f9f61139405e97a1716b6aec7f22
msgid ""
"Collective communication primitives are common patterns of data transfer among a group of CUDA devices. A communication "
"algorithm involves many processors that are communicating together. Each CUDA device is identified within the "
"communication group by a zero-based index or rank. Each rank uses a communicator object to refer to the collection of "
"GPUs that are intended to work together. The creation of a communicator is the first step needed before launching any "
"communication operation."
msgstr ""
"集合通信原语是一组CUDA设备间常见的数据传输模式。通信算法涉及多个协同通信的处理器。在通信组中，每个CUDA设备通过一个从零开始的索引（即秩）进行标识。每个秩使用通信器对象来指代需要协同工作的GPU集合。在启动任何通信操作之前，创建通信器"
"是必需的第一步。"
