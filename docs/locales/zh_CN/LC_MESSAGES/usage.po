# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the NCCL(2.19) package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: NCCL(2.19)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-27 11:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: gpt-po v1.0.11\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../source/usage.rst:3 557a9179fe2f43f2a43470385652a46b
msgid "Using NCCL"
msgstr "NCCL 使用指南"

#: ../../source/usage.rst:5 d138eab8cada459392ee8bcdb0e8f456
msgid "Using NCCL is similar to using any other library in your code:"
msgstr "使用NCCL就像在您的代码中使用任何其他库一样："

#: ../../source/usage.rst:7 e3c6beb521a043f9b2d36a166971cbd0
msgid "Install the NCCL library on your system"
msgstr "在您的系统上安装NCCL库"

#: ../../source/usage.rst:9 3f3ab8cf201644deb4b0bfc21c1f47e3
msgid "Modify your application to link to that library"
msgstr "修改你的应用程序以链接到那个库。"

#: ../../source/usage.rst:11 fb1d2389a570459db5a3677326a1908e
msgid "Include the header file nccl.h in your application"
msgstr "在你的应用程序中包含头文件 `nccl.h`。"

#: ../../source/usage.rst:13 2bc28b0a3d9a4d14a397c6190bc11767
msgid "Create a communicator (see :ref:`communicator-label`)"
msgstr "创建一个通信器（参见：:ref:`communicator-label`）"

#: ../../source/usage.rst:15 d8e0f2c37e2647c0bb775e35a929a156
msgid ""
"Use NCCL collective communication primitives to perform data communication. You can familiarize yourself with the "
":ref:`api-label` documentation to maximize your usage performance."
msgstr "使用NCCL集体通信原语来执行数据通信。您可以熟悉:ref:`api-label`文档，以最大化您的使用性能。"

#: ../../source/usage.rst:17 1f6d2bc190694962ab80defbc58f9f73
msgid ""
"Collective communication primitives are common patterns of data transfer among a group of CUDA devices. A communication "
"algorithm involves many processors that are communicating together. Each CUDA device is identified within the "
"communication group by a zero-based index or rank. Each rank uses a communicator object to refer to the collection of "
"GPUs that are intended to work together. The creation of a communicator is the first step needed before launching any "
"communication operation."
msgstr ""
"集体通信原语是CUDA设备组中常见的数据传输模式。通信算法涉及许多一起通信的处理器。每个CUDA设备在通信组中通过从零开始的索引或秩进行标识。每个秩使用通信器对象来引用打算一起工作的GPU集合。在启动任何通信操作之前，创建通信器是必需的第一"
"步。"
